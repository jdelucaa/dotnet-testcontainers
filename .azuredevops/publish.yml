jobs:
  - job: ${{ parameters.name }}
    displayName: CI build for ${{ parameters.displayName }}

    pool:
      vmImage: ${{ parameters.vmImage }}

    dependsOn:
      - BuildAndTestsOnWindows
      - BuildAndTestsOnUnix

    steps:
      - checkout: self
        clean: true
        lfs: true

      - task: DownloadPipelineArtifact@2
        inputs:
          source: current
          artifact: Unix.TestAndCoverageResults
          path: $(Build.SourcesDirectory)

      - task: DownloadPipelineArtifact@2
        inputs:
          source: current
          artifact: Windows.TestAndCoverageResults
          path: $(Build.SourcesDirectory)

      - task: UseDotNet@2
        displayName: Use .NET Core SDK ${{ parameters.dotNetCoreVersion }}
        inputs:
          version: ${{ parameters.dotNetCoreVersion }}

      - powershell: Get-ChildItem -Path 'test-coverage' -Filter *.xml | % { (Get-Content $_) -Replace '[A-Za-z0-9:\\\/]+src', '$(Build.SourcesDirectory)/src' | Set-Content $_ }
        displayName: Fix Absolute Code Coverage Paths

      - powershell: dotnet tool install --tool-path ./cake-tools --version ${{ parameters.cakeVersion }} Cake.Tool
        displayName: Setup prerequisites

      - powershell: |
          echo "##vso[task.setvariable variable=JAVA_HOME]$(JAVA_HOME_11_X64)"
          echo "##vso[task.setvariable variable=PATH]$(JAVA_HOME_11_X64)\bin;$(PATH)"
          echo "##vso[task.setvariable variable=DOTNET_ROLL_FORWARD]Major"
          ./cake-tools/dotnet-cake --target=Restore-NuGet-Packages
        displayName: Prepare

      - powershell: ./cake-tools/dotnet-cake --target=Sonar-Begin
        displayName: Sonar Begin

      - powershell: ./cake-tools/dotnet-cake --target=Build
        displayName: Build

      - powershell: ./cake-tools/dotnet-cake --target=Sonar-End
        displayName: Sonar End

      - powershell: |
          $env:FEED_APIKEY = "$(feed.apikey)"
          ./cake-tools/dotnet-cake --target=Publish
        displayName: Publish
        condition: and(succeeded(), eq(variables['System.PullRequest.IsFork'], False))
